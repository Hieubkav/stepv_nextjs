"use client";

import { useCallback, useEffect, useMemo, useState } from "react";
import { useQuery } from "convex/react";
import { api } from "@dohy/backend/convex/_generated/api";
import { ArrowLeft, Check, DownloadCloud, Mail, Phone, ShieldAlert } from "lucide-react";

import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Skeleton } from "@/components/ui/skeleton";
import { cn } from "@/lib/utils";
import type { LibraryResourceDetail, MediaImageDoc } from "./types";

const detailPricingConfig = {
  free: {
    label: "Miễn phí",
    badgeClassName: "bg-emerald-400/20 text-emerald-200 border border-emerald-400/50",
  },
  paid: {
    label: "Trả phí",
    badgeClassName: "bg-amber-400/20 text-amber-200 border border-amber-400/50",
  },
} as const;

type LibraryDetailViewProps = {
  slug: string;
  initialDetail?: LibraryResourceDetail | null | undefined;
};

type SiteSettingsDoc = {
  value?: {
    contactEmail?: string;
    contactPhone?: string;
    siteName?: string;
  };
};

function DetailSkeleton() {
  return (
    <div className="space-y-10">
      <div className="flex items-center gap-4 text-white/70">
        <Skeleton className="h-10 w-10 rounded-full" />
        <Skeleton className="h-4 w-40 rounded-full" />
      </div>
      <div className="grid gap-10 lg:grid-cols-[2fr,1.1fr]">
        <div className="space-y-6">
          <Skeleton className="h-80 w-full rounded-3xl" />
          <Skeleton className="h-6 w-3/4 rounded-full" />
          <Skeleton className="h-4 w-full rounded-full" />
          <Skeleton className="h-4 w-5/6 rounded-full" />
        </div>
        <div className="space-y-4">
          <Skeleton className="h-40 w-full rounded-3xl" />
          <Skeleton className="h-32 w-full rounded-3xl" />
        </div>
      </div>
    </div>
  );
}

export default function LibraryDetailView({ slug, initialDetail }: LibraryDetailViewProps) {

  const detailQuery = useQuery(api.library.getResourceDetail, {
    slug,
    includeInactive: false,
  }) as LibraryResourceDetail | null | undefined;
  const media = useQuery(api.media.list, { kind: "image" }) as MediaImageDoc[] | undefined;

  const siteSettingsDoc = useQuery(api.settings.getByKey, { key: "site" }) as SiteSettingsDoc | null | undefined;

  const [detail, setDetail] = useState<LibraryResourceDetail | null | undefined>(
    initialDetail,
  );
  const [activeImageUrl, setActiveImageUrl] = useState<string | null>(null);
  const goBackToList = useCallback(() => {
    if (typeof window !== "undefined") {
      window.location.href = `${window.location.origin}/thu-vien`;
    }
  }, []);
  useEffect(() => {
    if (initialDetail !== undefined) {
      setDetail(initialDetail);
    }
  }, [initialDetail]);

  useEffect(() => {
    if (detailQuery !== undefined) {
      setDetail(detailQuery);
    }
  }, [detailQuery]);

  const mediaMap = useMemo(() => {
    const map = new Map<string, MediaImageDoc>();
    if (Array.isArray(media)) {
      for (const item of media) {
        map.set(String(item._id), item);
      }
    }
    return map;
  }, [media]);

  if (detail === undefined) {
    return (
      <div className="bg-[#05070f] text-white">
        <div className="mx-auto max-w-6xl px-6 py-16 sm:px-10">
          <DetailSkeleton />
        </div>
      </div>
    );
  }

  if (detail === null) {
    return (
      <div className="bg-[#05070f] text-white">
        <div className="mx-auto max-w-3xl px-6 py-24 text-center sm:px-10">
          <div className="mx-auto flex size-16 items-center justify-center rounded-full border border-white/10 bg-white/5">
            <ShieldAlert className="size-7 text-amber-300" />
          </div>
          <h1 className="mt-6 text-3xl font-semibold text-white">Không tìm thấy tài nguyên</h1>
          <p className="mt-2 text-sm text-white/78">
            Tài nguyên bạn yêu cầu có thể đã bị ẩn hoặc chưa được xuất bản. Vui lòng quay lại danh sách để xem các nội dung khác.
          </p>
          <Button
            className="mt-8 rounded-full px-6 py-2 text-xs uppercase tracking-[0.3em] bg-gradient-to-br from-[#f6e05e] to-[#f0b429] text-[#18120b] shadow-[0_0_24px_rgba(240,180,41,0.35)] hover:from-[#f8e591] hover:to-[#f2c35a]"
            onClick={goBackToList}
          >
            <ArrowLeft className="mr-2 size-4" />Trở lại thư viện
          </Button>
        </div>
      </div>
    );
  }

  const { resource, images, softwares } = detail;
  const coverUrl = resource.coverImageId
    ? mediaMap.get(String(resource.coverImageId))?.url
    : undefined;
  const galleryUrls = images
    .map((image) => mediaMap.get(String(image.mediaId))?.url)
    .filter((url): url is string => Boolean(url));

  const preferredImage = useMemo(() => coverUrl ?? galleryUrls[0] ?? null, [coverUrl, galleryUrls]);

  useEffect(() => {
    setActiveImageUrl(preferredImage);
  }, [preferredImage]);

  const pricing = detailPricingConfig[resource.pricingType];
  const releaseDate = new Date(resource.createdAt).toLocaleDateString("vi-VN");
  const siteSettings = siteSettingsDoc ?? undefined;
  const contactEmail = siteSettings?.value?.contactEmail ?? "dohystudio@gmail.com";
  const contactPhone = siteSettings?.value?.contactPhone;

  const canDownload = Boolean(resource.isDownloadVisible && resource.downloadUrl);

  return (
    <div className="bg-[#05070f] text-white">
      <div className="mx-auto max-w-6xl px-6 py-16 sm:px-10">
        <div className="mb-10 flex items-center gap-3 text-sm text-white/78">
          <button
            type="button"
            onClick={goBackToList}
            className="inline-flex items-center gap-2 rounded-full border border-white/15 bg-white/[0.04] px-4 py-2 text-xs uppercase tracking-[0.3em] transition hover:border-primary/60 hover:text-primary"
          >
            <ArrowLeft className="size-4" />
            Quay lại thư viện
          </button>
        </div>

        <div className="grid gap-10 lg:grid-cols-[2fr,1.1fr]">
          <div className="space-y-8">
            <div
              className={cn(
                "overflow-hidden rounded-3xl border bg-white/[0.05] transition-all duration-300",
                activeImageUrl
                  ? "border-white/15 shadow-[0_0_32px_rgba(240,180,41,0.15)]"
                  : "border-white/10",
              )}
            >
              {activeImageUrl ? (
                <img src={activeImageUrl} alt={resource.title} className="h-full w-full object-cover" />
              ) : (
                <div className="flex h-80 items-center justify-center text-sm uppercase tracking-[0.3em] text-white/55">
                  Chưa có ảnh đại diện
                </div>
              )}
            </div>

            {galleryUrls.length > 0 && (
              <div className="flex flex-wrap gap-4">
                {galleryUrls.map((url) => {
                  const isActive = activeImageUrl === url;
                  return (
                    <button
                      key={url}
                      type="button"
                      onClick={() => setActiveImageUrl(url)}
                      className={cn(
                        "group h-28 flex-1 min-w-[160px] overflow-hidden rounded-2xl border bg-white/[0.03] transition-all duration-300",
                        isActive
                          ? "border-[#f6e05e]/70 shadow-[0_0_18px_rgba(240,180,41,0.3)]"
                          : "border-white/10 hover:border-white/25",
                      )}
                    >
                      <img
                        src={url}
                        alt="Resource preview"
                        className="h-full w-full object-cover transition duration-300 group-hover:scale-105"
                      />
                    </button>
                  );
                })}
              </div>
            )}

            <div className="space-y-4">
              <div className="flex flex-wrap items-center gap-4">
                <Badge className={cn("uppercase tracking-[0.3em]", pricing.badgeClassName)}>
                  {pricing.label}
                </Badge>
                <span className="text-xs uppercase tracking-[0.3em] text-white/55">
                  Cập nhật ngày {releaseDate}
                </span>
              </div>

              <h1 className="text-3xl font-semibold text-white sm:text-4xl">{resource.title}</h1>
              {resource.description && (
                <p className="text-base text-white/82">{resource.description}</p>
              )}

              {softwares.length > 0 && (
                <div className="space-y-2">
                  <div className="text-xs uppercase tracking-[0.3em] text-white/55">Tương thích</div>
                  <div className="flex flex-wrap gap-2">
                    {softwares.map(({ software }) => (
                      <span
                        key={String(software._id)}
                        className="rounded-full border border-white/15 bg-white/[0.05] px-4 py-2 text-xs uppercase tracking-[0.3em] text-white/82"
                      >
                        {software.name}
                      </span>
                    ))}
                  </div>
                </div>
              )}

              {resource.features && resource.features.length > 0 && (
                <div className="space-y-3">
                  <h2 className="text-lg font-semibold text-white">Tính năng nổi bật</h2>
                  <ul className="space-y-2 text-sm text-white/82">
                    {resource.features.map((feature) => (
                      <li key={feature} className="flex items-start gap-3">
                        <span className="mt-1 flex size-5 items-center justify-center rounded-full border border-emerald-400/40 bg-emerald-400/10">
                          <Check className="size-3 text-emerald-300" />
                        </span>
                        <span>{feature}</span>
                      </li>
                    ))}
                  </ul>
                </div>
              )}
            </div>
          </div>

          <aside className="space-y-6">
            <div className="space-y-4 rounded-3xl border border-white/10 bg-white/[0.04] p-6 backdrop-blur">
              <div className="space-y-1">
                <div className="text-xs uppercase tracking-[0.3em] text-white/55">Giá</div>
                <div className="text-2xl font-semibold text-white">
                  {resource.pricingType === "free" ? "Free" : "Liên hệ để nhận báo giá"}
                </div>
              </div>

              <div className="space-y-3 rounded-2xl border border-white/10 bg-black/40 p-4">
                <div className="text-xs uppercase tracking-[0.3em] text-white/55">Thông tin liên hệ</div>
                <div className="flex items-center gap-3 text-sm text-white/82">
                  <Mail className="size-4 text-white/55" />
                  <a href={`mailto:${contactEmail}`} className="hover:text-primary">
                    {contactEmail}
                  </a>
                </div>
                {contactPhone && (
                  <div className="flex items-center gap-3 text-sm text-white/82">
                    <Phone className="size-4 text-white/55" />
                    <span>{contactPhone}</span>
                  </div>
                )}
              </div>

              <Button
                variant="outline"
                asChild={canDownload}
                disabled={!canDownload}
                className={cn(
                  "w-full rounded-full px-6 py-3 text-xs uppercase tracking-[0.3em] transition-all duration-300",
                  canDownload
                    ? "border-transparent bg-gradient-to-br from-[#f6e05e] to-[#f0b429] text-[#18120b] shadow-[0_0_24px_rgba(240,180,41,0.35)] hover:from-[#f8e591] hover:to-[#f2c35a]"
                    : "border-white/12 bg-white/[0.04] text-white/70",
                )}
              >
                {canDownload ? (
                  <a
                    href={resource.downloadUrl ?? "#"}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="inline-flex w-full items-center justify-center gap-2"
                  >
                    <DownloadCloud className="size-4" />
                    Tải xuống ngay
                  </a>
                ) : (
                  <span className="inline-flex items-center justify-center gap-2 text-white/70">
                    <ShieldAlert className="size-4" />
                    Chưa mở tải về
                  </span>
                )}
              </Button>
            </div>

            <div className="rounded-3xl border border-white/10 bg-white/[0.03] p-6 text-sm text-white/78">
              <h3 className="text-base font-semibold text-white">Ghi chú</h3>
              <p className="mt-2">
                Nếu bạn cần hỗ trợ cài đặt hoặc demo trước khi mua, hãy liên hệ đội ngũ DOHY Studio để được tư vấn chi tiết.
              </p>
            </div>
          </aside>
        </div>
      </div>


    </div>
  );
}
